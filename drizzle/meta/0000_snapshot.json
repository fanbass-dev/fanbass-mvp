{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.features": {
      "name": "features",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'Open'"
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "features_created_by_fkey": {
          "name": "features_created_by_fkey",
          "tableFrom": "features",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Authenticated users can read features": {
          "name": "Authenticated users can read features",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.artist_placements": {
      "name": "artist_placements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "stage": {
          "name": "stage",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tier": {
          "name": "tier",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "inserted_at": {
          "name": "inserted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_admin_placement": {
          "name": "is_admin_placement",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "artist_placements_artist_id_fkey": {
          "name": "artist_placements_artist_id_fkey",
          "tableFrom": "artist_placements",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "artist_placements_user_id_fkey": {
          "name": "artist_placements_user_id_fkey",
          "tableFrom": "artist_placements",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_user_artist": {
          "columns": [
            "user_id",
            "artist_id"
          ],
          "nullsNotDistinct": false,
          "name": "unique_user_artist"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Allow user to insert their own placements": {
          "name": "Allow user to insert their own placements",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Allow user to update their own placements": {
          "name": "Allow user to update their own placements",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Allow user to view their own placements": {
          "name": "Allow user to view their own placements",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can delete their own placements": {
          "name": "Users can delete their own placements",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.event_sets": {
      "name": "event_sets",
      "schema": "",
      "columns": {
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tier": {
          "name": "tier",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "set_note": {
          "name": "set_note",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "event_lineups_event_id_fkey": {
          "name": "event_lineups_event_id_fkey",
          "tableFrom": "event_sets",
          "tableTo": "events",
          "schemaTo": "public",
          "columnsFrom": [
            "event_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "All users can read lineups": {
          "name": "All users can read lineups",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Public can delete event lineups": {
          "name": "Public can delete event lineups",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Public can insert event lineups": {
          "name": "Public can insert event lineups",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Public can read all event lineups": {
          "name": "Public can read all event lineups",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Public can update event lineups": {
          "name": "Public can update event lineups",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.feature_votes": {
      "name": "feature_votes",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "feature_id": {
          "name": "feature_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "voted_at": {
          "name": "voted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "feature_votes_feature_id_fkey": {
          "name": "feature_votes_feature_id_fkey",
          "tableFrom": "feature_votes",
          "tableTo": "features",
          "schemaTo": "public",
          "columnsFrom": [
            "feature_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "feature_votes_user_id_fkey": {
          "name": "feature_votes_user_id_fkey",
          "tableFrom": "feature_votes",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "feature_votes_feature_id_user_id_key": {
          "columns": [
            "feature_id",
            "user_id"
          ],
          "nullsNotDistinct": false,
          "name": "feature_votes_feature_id_user_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Authenticated users can insert their own votes": {
          "name": "Authenticated users can insert their own votes",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Authenticated users can read feature votes": {
          "name": "Authenticated users can read feature votes",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.events": {
      "name": "events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "num_tiers": {
          "name": "num_tiers",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 3
        },
        "slug": {
          "name": "slug",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_draft": {
          "name": "is_draft",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "'draft'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "events_created_by_fkey": {
          "name": "events_created_by_fkey",
          "tableFrom": "events",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "events_slug_key": {
          "columns": [
            "slug"
          ],
          "nullsNotDistinct": false,
          "name": "events_slug_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Anyone can read published events": {
          "name": "Anyone can read published events",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Public can delete events": {
          "name": "Public can delete events",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ]
        },
        "Public can insert events": {
          "name": "Public can insert events",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Public can read all events": {
          "name": "Public can read all events",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Public can update events": {
          "name": "Public can update events",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.artist_placement_history": {
      "name": "artist_placement_history",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tier": {
          "name": "tier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "artist_placement_history_artist_id_fkey": {
          "name": "artist_placement_history_artist_id_fkey",
          "tableFrom": "artist_placement_history",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "artist_placement_history_user_id_fkey": {
          "name": "artist_placement_history_user_id_fkey",
          "tableFrom": "artist_placement_history",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "Allow user to insert their own placement history": {
          "name": "Allow user to insert their own placement history",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Allow user to update their own placement history": {
          "name": "Allow user to update their own placement history",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_fkey": {
          "name": "profiles_id_fkey",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "profiles_username_key": {
          "columns": [
            "username"
          ],
          "nullsNotDistinct": false,
          "name": "profiles_username_key"
        }
      },
      "checkConstraints": {
        "username_format": {
          "name": "username_format",
          "value": "(username IS NULL) OR ((length(username) >= 3) AND (length(username) <= 30) AND (username ~ '^[a-zA-Z0-9 _-]+$'::text) AND (TRIM(BOTH FROM username) <> ''::text))"
        }
      },
      "policies": {
        "Anyone can get display names": {
          "name": "Anyone can get display names",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "Public profiles are viewable by everyone.": {
          "name": "Public profiles are viewable by everyone.",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Users can update own profile.": {
          "name": "Users can update own profile.",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_activities": {
      "name": "user_activities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "activity_type": {
          "name": "activity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "set_id": {
          "name": "set_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        }
      },
      "indexes": {
        "idx_user_activities_artist_id": {
          "name": "idx_user_activities_artist_id",
          "columns": [
            {
              "expression": "artist_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_activities_event_id": {
          "name": "idx_user_activities_event_id",
          "columns": [
            {
              "expression": "event_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_activities_user_id": {
          "name": "idx_user_activities_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_activities_activity_type_idx": {
          "name": "user_activities_activity_type_idx",
          "columns": [
            {
              "expression": "activity_type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_activities_created_at_idx": {
          "name": "user_activities_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "user_activities_artist_id_fkey": {
          "name": "user_activities_artist_id_fkey",
          "tableFrom": "user_activities",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_activities_event_id_fkey": {
          "name": "user_activities_event_id_fkey",
          "tableFrom": "user_activities",
          "tableTo": "events",
          "schemaTo": "public",
          "columnsFrom": [
            "event_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_activities_set_id_fkey": {
          "name": "user_activities_set_id_fkey",
          "tableFrom": "user_activities",
          "tableTo": "event_sets",
          "schemaTo": "public",
          "columnsFrom": [
            "set_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_activities_user_id_fkey": {
          "name": "user_activities_user_id_fkey",
          "tableFrom": "user_activities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Activities are viewable by all users": {
          "name": "Activities are viewable by all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Activities can only be inserted by the system": {
          "name": "Activities can only be inserted by the system",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Admins can view all activities": {
          "name": "Admins can view all activities",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        },
        "Users can insert their own activities": {
          "name": "Users can insert their own activities",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Users can view their own activities": {
          "name": "Users can view their own activities",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.artists": {
      "name": "artists",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'solo'"
        },
        "fingerprint": {
          "name": "fingerprint",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "unique_upper_artist_name": {
          "name": "unique_upper_artist_name",
          "columns": [
            {
              "expression": "upper(name)",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": true
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "artists_created_by_fkey": {
          "name": "artists_created_by_fkey",
          "tableFrom": "artists",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "created_by"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can delete": {
          "name": "Admins can delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "has_role('admin'::text)"
        },
        "Admins can insert": {
          "name": "Admins can insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Admins can read": {
          "name": "Admins can read",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Admins can update": {
          "name": "Admins can update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        },
        "All users can read artists": {
          "name": "All users can read artists",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Allow authenticated artist creation": {
          "name": "Allow authenticated artist creation",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "Enable read access for all users": {
          "name": "Enable read access for all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_levels": {
      "name": "user_levels",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "xp_overflow": {
          "name": "xp_overflow",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "prestige_level": {
          "name": "prestige_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "prestige_multiplier": {
          "name": "prestige_multiplier",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'1.0'"
        },
        "total_xp_earned": {
          "name": "total_xp_earned",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "current_level": {
          "name": "current_level",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "\nCASE\n    WHEN (total_xp_earned = 0) THEN (1)::bigint\n    ELSE ((total_xp_earned / 5000) + 1)\nEND",
            "type": "stored"
          }
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_levels_user_id_fkey": {
          "name": "user_levels_user_id_fkey",
          "tableFrom": "user_levels",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can insert their own levels": {
          "name": "Users can insert their own levels",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid() = user_id)"
        },
        "Users can update their own levels": {
          "name": "Users can update their own levels",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        },
        "Users can view their own levels": {
          "name": "Users can view their own levels",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.xp_config": {
      "name": "xp_config",
      "schema": "",
      "columns": {
        "activity_type": {
          "name": "activity_type",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "base_xp": {
          "name": "base_xp",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "xp_per_level": {
          "name": "xp_per_level",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 5000
        },
        "chaos_min": {
          "name": "chaos_min",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 0.7
        },
        "chaos_max": {
          "name": "chaos_max",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 1.3
        },
        "crit_chance": {
          "name": "crit_chance",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 0.05
        },
        "crit_multiplier": {
          "name": "crit_multiplier",
          "type": "double precision",
          "primaryKey": false,
          "notNull": true,
          "default": 2
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.roles": {
      "name": "roles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "roles_user_id_fkey": {
          "name": "roles_user_id_fkey",
          "tableFrom": "roles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "roles_user_id_role_key": {
          "columns": [
            "user_id",
            "role"
          ],
          "nullsNotDistinct": false,
          "name": "roles_user_id_role_key"
        }
      },
      "checkConstraints": {
        "roles_role_check": {
          "name": "roles_role_check",
          "value": "role = ANY (ARRAY['admin'::text, 'fan'::text, 'artist'::text, 'promoter'::text])"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.xp_rewards": {
      "name": "xp_rewards",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "activity_type": {
          "name": "activity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "base_xp": {
          "name": "base_xp",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "chaos_multiplier": {
          "name": "chaos_multiplier",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "crit_multiplier": {
          "name": "crit_multiplier",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "total_xp_earned": {
          "name": "total_xp_earned",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "levels_gained": {
          "name": "levels_gained",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "source_valid": {
          "name": "source_valid",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {
        "idx_xp_rewards_created_at": {
          "name": "idx_xp_rewards_created_at",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_xp_rewards_user_id": {
          "name": "idx_xp_rewards_user_id",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "xp_rewards_user_id_fkey": {
          "name": "xp_rewards_user_id_fkey",
          "tableFrom": "xp_rewards",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can insert their own rewards": {
          "name": "Users can insert their own rewards",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(auth.uid() = user_id)"
        },
        "Users can view their own rewards": {
          "name": "Users can view their own rewards",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.artist_members": {
      "name": "artist_members",
      "schema": "",
      "columns": {
        "parent_artist_id": {
          "name": "parent_artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "member_artist_id": {
          "name": "member_artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_artist_members_member": {
          "name": "idx_artist_members_member",
          "columns": [
            {
              "expression": "member_artist_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_artist_members_parent": {
          "name": "idx_artist_members_parent",
          "columns": [
            {
              "expression": "parent_artist_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "artist_members_member_artist_id_fkey": {
          "name": "artist_members_member_artist_id_fkey",
          "tableFrom": "artist_members",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "member_artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "artist_members_parent_artist_id_fkey": {
          "name": "artist_members_parent_artist_id_fkey",
          "tableFrom": "artist_members",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "parent_artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "artist_members_pkey": {
          "name": "artist_members_pkey",
          "columns": [
            "parent_artist_id",
            "member_artist_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Enable delete for authenticated users only": {
          "name": "Enable delete for authenticated users only",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "true"
        },
        "Enable insert for authenticated users only": {
          "name": "Enable insert for authenticated users only",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ]
        },
        "Enable read access for all users": {
          "name": "Enable read access for all users",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "Enable update for authenticated users only": {
          "name": "Enable update for authenticated users only",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ]
        }
      },
      "isRLSEnabled": true
    },
    "public.event_set_artists": {
      "name": "event_set_artists",
      "schema": "",
      "columns": {
        "set_id": {
          "name": "set_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "event_lineup_artists_artist_id_fkey": {
          "name": "event_lineup_artists_artist_id_fkey",
          "tableFrom": "event_set_artists",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "event_lineup_artists_lineup_id_fkey": {
          "name": "event_lineup_artists_lineup_id_fkey",
          "tableFrom": "event_set_artists",
          "tableTo": "event_sets",
          "schemaTo": "public",
          "columnsFrom": [
            "set_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "event_lineup_artists_pkey": {
          "name": "event_lineup_artists_pkey",
          "columns": [
            "set_id",
            "artist_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "All users can delete lineup artists": {
          "name": "All users can delete lineup artists",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "public"
          ],
          "using": "true"
        },
        "All users can insert lineup artists": {
          "name": "All users can insert lineup artists",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "public"
          ]
        },
        "All users can read lineup artists": {
          "name": "All users can read lineup artists",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "public"
          ]
        },
        "All users can update lineup artists": {
          "name": "All users can update lineup artists",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "public"
          ]
        }
      },
      "isRLSEnabled": false
    },
    "public.first_time_rankings": {
      "name": "first_time_rankings",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_first_time_rankings_user": {
          "name": "idx_first_time_rankings_user",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "first_time_rankings_artist_id_fkey": {
          "name": "first_time_rankings_artist_id_fkey",
          "tableFrom": "first_time_rankings",
          "tableTo": "artists",
          "schemaTo": "public",
          "columnsFrom": [
            "artist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "first_time_rankings_user_id_fkey": {
          "name": "first_time_rankings_user_id_fkey",
          "tableFrom": "first_time_rankings",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "first_time_rankings_pkey": {
          "name": "first_time_rankings_pkey",
          "columns": [
            "user_id",
            "artist_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.activity_rewards": {
      "name": "activity_rewards",
      "schema": "",
      "columns": {
        "activity_id": {
          "name": "activity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "reward_id": {
          "name": "reward_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_activity_rewards_activity": {
          "name": "idx_activity_rewards_activity",
          "columns": [
            {
              "expression": "activity_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_activity_rewards_reward": {
          "name": "idx_activity_rewards_reward",
          "columns": [
            {
              "expression": "reward_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "activity_rewards_activity_id_fkey": {
          "name": "activity_rewards_activity_id_fkey",
          "tableFrom": "activity_rewards",
          "tableTo": "user_activities",
          "schemaTo": "public",
          "columnsFrom": [
            "activity_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "activity_rewards_reward_id_fkey": {
          "name": "activity_rewards_reward_id_fkey",
          "tableFrom": "activity_rewards",
          "tableTo": "xp_rewards",
          "schemaTo": "public",
          "columnsFrom": [
            "reward_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "activity_rewards_pkey": {
          "name": "activity_rewards_pkey",
          "columns": [
            "activity_id",
            "reward_id"
          ]
        }
      },
      "uniqueConstraints": {
        "activity_rewards_activity_id_key": {
          "columns": [
            "activity_id"
          ],
          "nullsNotDistinct": false,
          "name": "activity_rewards_activity_id_key"
        },
        "activity_rewards_reward_id_key": {
          "columns": [
            "reward_id"
          ],
          "nullsNotDistinct": false,
          "name": "activity_rewards_reward_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.event_sets_view": {
      "name": "event_sets_view",
      "schema": "public",
      "columns": {
        "set_id": {
          "name": "set_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "event_id": {
          "name": "event_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "tier": {
          "name": "tier",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "set_note": {
          "name": "set_note",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "artist_name": {
          "name": "artist_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT s.id AS set_id, s.event_id, s.tier, s.display_name, s.set_note, a.id AS artist_id, a.name AS artist_name, a.type FROM event_sets s JOIN event_set_artists esa ON esa.set_id = s.id JOIN artists a ON a.id = esa.artist_id",
      "materialized": false
    },
    "public.artist_contributions": {
      "name": "artist_contributions",
      "schema": "public",
      "columns": {
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "artist_name": {
          "name": "artist_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "contributor_name": {
          "name": "contributor_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "activity_type": {
          "name": "activity_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "contribution_count": {
          "name": "contribution_count",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT a.id AS artist_id, a.name AS artist_name, ua.user_id, u.raw_user_meta_data ->> 'full_name'::text AS contributor_name, ua.activity_type, count(*) AS contribution_count FROM artists a JOIN user_activities ua ON ua.artist_id = a.id JOIN auth.users u ON ua.user_id = u.id GROUP BY a.id, a.name, ua.user_id, (u.raw_user_meta_data ->> 'full_name'::text), ua.activity_type",
      "materialized": false
    },
    "public.user_total_xp": {
      "name": "user_total_xp",
      "schema": "public",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "total_xp": {
          "name": "total_xp",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT xp_rewards.user_id, COALESCE(sum(xp_rewards.total_xp_earned), 0::numeric)::bigint AS total_xp FROM xp_rewards GROUP BY xp_rewards.user_id",
      "materialized": false
    },
    "public.artist_placements_with_names": {
      "name": "artist_placements_with_names",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "artist_id": {
          "name": "artist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "artist_name": {
          "name": "artist_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tier": {
          "name": "tier",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT ap.id, ap.user_id, ap.artist_id, a.name AS artist_name, ap.tier, ap.updated_at FROM artist_placements ap JOIN artists a ON ap.artist_id = a.id",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}